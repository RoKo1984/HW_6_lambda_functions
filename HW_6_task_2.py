# Представьте себе бухгалтерскую книгу в книжном магазине. В этой книге хранятся записи о номере заказа,
# названии книги, количестве и стоимости одной книги, как представлено ниже, в таблице.
# Напишите программу на Python, которая на вход получает список списков:
# [
# [34587, 'Learning Python, Mark Lutz', 4, 40.95],
# [98762, 'Programming Python, Mark Lutz', 5, 56.80],
# [77226, 'Head First Python, Paul Barry', 3, 32.95],
# [88112, 'Einfuhrung in Python3, Bernd Klein', 3, 24.99]
# ]
# и возвращает список кортежей. Каждый кортеж состоит из номера заказа и произведения цены на товары и
# количества. Стоимость товара должна быть увеличена на $10, если стоимость заказа меньше $100.
# Программа должна использовать lambda и map.


orders = [
[34587, 'Learning Python, Mark Lutz', 4, 40.95],
[98762, 'Programming Python, Mark Lutz', 5, 56.80],
[77226, 'Head First Python, Paul Barry', 3, 32.95],
[88112, 'Einfuhrung in Python3, Bernd Klein', 3, 24.99]
]
    # Краткое ТЗ
# В каждом списке выполнить:
#  1. удалить название книги
#  2. выполнить произведение количества книг и стоимости за шт.
#  3. Если общая цена < 100 то + 10 $
#  4. вернуть список кортежей

    # Решение в две строки
# listWith3Items = map(lambda x: (x[0],x[2] * x[3], x[2]), orders) # вывожу необходимые элементы вложенных списков с учетем произведения цены и количества книг
# invoice_totals = list(map(lambda y: y if 100 <= y[1] else (y[0], y[1] + 10, y[2]),listWith3Items)) # увеличиваю общую стоимость на 10 если стоимость <100

    # Сведенный код в одну строку
invoice_totals = list(map(lambda y: y if 100 <= y[1] else (y[0], y[1] + 10, y[2]), map(lambda x: (x[0],x[2] * x[3], x[2]), orders)))

print(*invoice_totals, sep='\n')  # для наглядности вывел построчно каждый кортеж
# print(invoice_totals)



